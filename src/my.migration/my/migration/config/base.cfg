[transmogrifier]
pipeline =
    drupal
    portal_type
    url_normalizer
    path
    publication_state
    text_mimetype
    mimetype_encapsulator
    folders
    constructor
    commenting
    comments
    schema_update
    workflow
    reindex_object

[settings]
base_path = other-content
# Have to escape python string formatting for when this gets passed
# into sqlalchemy
date_format = %%Y/%%m/%%d %%k:%%i:%%s

[drupal]
blueprint = transmogrify.sqlalchemy
dsn = mysql://root@localhost/drupal-transmog

[portal_type]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
# We will add the value in the extended config, but we need a
# default set here
value = string:

[url_normalizer]
blueprint = plone.app.transmogrifier.urlnormalizer
source-key = title
destination-key = string:_id
locale = string:en

[path]
blueprint = collective.transmogrifier.sections.inserter
# only add a path if one does not exist
condition = python:'_path' not in item and not '_parent_path' in item
key = string:_path
# Add the value in the extended configuration
value = string:${settings:base_path}/${item/_id}

[publication_state]
blueprint = collective.transmogrifier.sections.inserter
condition = python:'_status' in item and item['_status'] == 1
key = string:_transitions
value = string:publish

[text_mimetype]
# This could probably be taken from the database as well
blueprint = collective.transmogrifier.sections.inserter
key = string:_text_mimetype
value = string:text/html

[mimetype_encapsulator]
blueprint = plone.app.transmogrifier.mimeencapsulator
key = text
mimetype = python:item.get('_%s_mimetype', key)
field = key
condition = mimetype

[commenting]
blueprint = collective.transmogrifier.sections.inserter
key = string:allowDiscussion
# default to false
value = python:False

[comments]
blueprint = transmogrify.comments

[folders]
blueprint = collective.transmogrifier.sections.folders

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[schema_update]
blueprint = plone.app.transmogrifier.atschemaupdater

[workflow]
blueprint = plone.app.transmogrifier.workflowupdater

[reindex_object]
blueprint = plone.app.transmogrifier.reindexobject

[debug]
# Add this into the pipeline to get a pdb prompt for debugging
blueprint = collective.transmogrifier.sections.inserter
key = string:debug
value = python:modules['pdb'].set_trace()
#condition = python:item.get('_path', '') == 'content/stronger-connection-out-customers'
